#define RAYTRACING_BACKEND_COMPUTE
#define GROUP_SIZE_X 16
#define GROUP_SIZE_Y 8
#define RAYTRACING_GROUP_SIZE GROUP_SIZE_X*GROUP_SIZE_Y
#include "TraceRays.hlsl"

int g_DispatchWidth;
int g_DispatchHeight;
int g_DispatchDepth;

#pragma kernel MainRayGenShader
[numthreads(GROUP_SIZE_X, GROUP_SIZE_Y, 1)]
void MainRayGenShader(
    in uint3 gidx: SV_DispatchThreadID,
    in uint lidx : SV_GroupIndex)
{
    if (gidx.x >= uint(g_DispatchWidth) || gidx.y >= uint(g_DispatchHeight) || gidx.z >= uint(g_DispatchDepth))
        return;

    UnifiedRT::DispatchInfo dispatchInfo;
    dispatchInfo.dispatchThreadID = gidx;
    dispatchInfo.dispatchDimensionsInThreads = int3(g_DispatchWidth, g_DispatchHeight, g_DispatchDepth);
    dispatchInfo.localThreadIndex = lidx;
    dispatchInfo.globalThreadIndex = gidx.x + gidx.y * g_DispatchWidth + gidx.z * (g_DispatchWidth* g_DispatchHeight);

    RayGenExecute(dispatchInfo);
}
