#define RAYTRACING_BACKEND_COMPUTE
#define GROUP_SIZE_X 64
#define GROUP_SIZE_Y 1
#define RAYTRACING_GROUP_SIZE (GROUP_SIZE_X*GROUP_SIZE_Y)

#include "TraceRenderingLayerMask.hlsl"

int g_DispatchWidth;
int g_DispatchHeight;
int g_DispatchDepth;

#pragma kernel MainRayGenShader
//#pragma enable_d3d11_debug_symbols

[numthreads(GROUP_SIZE_X, GROUP_SIZE_Y, 1)]
void MainRayGenShader(uint3 gidx : SV_DispatchThreadID, uint lidx : SV_GroupIndex)
{
    UnifiedRT::DispatchInfo dispatchInfo;
    dispatchInfo.dispatchThreadID = gidx;
    dispatchInfo.dispatchDimensionsInThreads = int3(g_DispatchWidth, g_DispatchHeight, g_DispatchDepth);
    dispatchInfo.localThreadIndex = lidx;
    dispatchInfo.globalThreadIndex = gidx.x + gidx.y * g_DispatchWidth + gidx.z * (g_DispatchWidth* g_DispatchHeight);

    RayGenExecute(dispatchInfo);
}
